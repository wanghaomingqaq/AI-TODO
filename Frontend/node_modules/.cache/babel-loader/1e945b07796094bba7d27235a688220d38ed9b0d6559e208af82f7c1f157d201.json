{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nimport { ElMessage } from 'element-plus';\nconst open4 = errormsg => {\n  ElMessage.error(errormsg);\n};\nexport default {\n  name: 'NoteForm',\n  data() {\n    return {\n      localInput: '',\n      // 用于文本框的本地数据\n      recivedata: [],\n      showMessage: false,\n      loading: false\n    };\n  },\n  props: ['addNote'],\n  methods: {\n    submitHupu() {\n      this.loading = true;\n      const dataTosend = {\n        text: this.localInput,\n        msgid: 7\n      };\n      axios.post('/login', dataTosend).then(response => {\n        console.log('服务器响应:', response.data);\n        this.recivedata = response.data.note;\n        this.showMessage = true;\n        // 处理服务器的响应\n        this.loading = false;\n        this.localInput = '';\n        console.log(\"--------------\");\n        console.log(this.recivedata);\n        console.log(\"--------------\");\n        // this.$emit('inputSubmitted', this.recivedata); // 向父组件发送事件\n        // const todoObj = {id:nanoid(),title:this.recivedata,done:false}\n\n        const todoObj = this.recivedata.map(item => {\n          return {\n            id: nanoid(),\n            title: JSON.parse(item),\n            done: false\n          };\n        });\n\n        // 使用reduce按照label分组\n        const groupedByLabel = todoObj.reduce((acc, cur) => {\n          const label = cur.title.label;\n          if (!acc[label]) {\n            acc[label] = [];\n          }\n          acc[label].push({\n            content: cur.title.content,\n            createTime: cur.title.createTime\n          });\n          return acc;\n        }, {});\n        console.log(groupedByLabel);\n        this.recivedata = '';\n        if (todoObj[0].title !== 'null') {\n          this.addNote(groupedByLabel);\n        } else {\n          open4(\"未提取到关键词！\");\n        }\n      }).catch(error => {\n        const errorMessage = error.message;\n        open4(errorMessage);\n        console.error('请求错误:', error);\n        this.loading = false;\n        // 处理错误ee\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","nanoid","ElMessage","open4","errormsg","error","name","data","localInput","recivedata","showMessage","loading","props","methods","submitHupu","dataTosend","text","msgid","post","then","response","console","log","note","todoObj","map","item","id","title","JSON","parse","done","groupedByLabel","reduce","acc","cur","label","push","content","createTime","addNote","catch","errorMessage","message"],"sources":["/home/workspace/AI-Todo/Frontend/src/components/HupuForm.vue"],"sourcesContent":["<template>\n    <div>\n      <el-button type=\"success\" round @click=\"submitHupu\" style=\"margin-top: 5px;\">\n        今天资讯\n        </el-button>\n      <ul>\n        <li v-for=\"(item, index) in items\" :key=\"index\" class=\"list-item\">{{ item }}</li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\nimport axios from 'axios';\nimport {nanoid} from 'nanoid'\nimport { ElMessage } from 'element-plus'\nconst open4 = (errormsg) => {\n  ElMessage.error(errormsg)\n}\n  export default {\n  name: 'NoteForm',\n  data() {\n    return {\n      localInput: '', // 用于文本框的本地数据\n      recivedata: [],\n      showMessage: false,\n      loading: false\n    };\n  },\n  props:['addNote'],\n  methods: {\n\n    submitHupu() {\n      this.loading = true;\n\n      const dataTosend = {\n        text: this.localInput,\n        msgid: 7\n      };\n      axios.post('/login', dataTosend)\n        .then(response => {\n          console.log('服务器响应:', response.data);\n          this.recivedata = response.data.note;\n          this.showMessage = true;\n          // 处理服务器的响应\n          this.loading = false;\n          this.localInput = ''\n          console.log(\"--------------\")\n          console.log(this.recivedata)\n          console.log(\"--------------\")\n          // this.$emit('inputSubmitted', this.recivedata); // 向父组件发送事件\n          // const todoObj = {id:nanoid(),title:this.recivedata,done:false}\n    \n          const todoObj = this.recivedata.map(item => {\n            return {\n              id: nanoid(),\n              title: JSON.parse(item),\n              done: false\n            };\n          });\n\n          // 使用reduce按照label分组\n          const groupedByLabel = todoObj.reduce((acc, cur) => {\n              const label = cur.title.label;\n              if (!acc[label]) {\n                  acc[label] = [];\n              }\n              acc[label].push({\n                  content: cur.title.content,\n                  createTime: cur.title.createTime\n              });\n              return acc;\n          }, {});\n          console.log(groupedByLabel);\n          this.recivedata = ''\n          if (todoObj[0].title !== 'null') {\n            this.addNote(groupedByLabel);\n          } else {\n            open4(\"未提取到关键词！\")\n          }\n        })\n        .catch(error => {\n          const errorMessage = error.message; \n          open4(errorMessage)\n          console.error('请求错误:', error);\n          this.loading = false;\n          // 处理错误ee\n        });\n    },\n  }\n}\n</script>\n  \n  <style scoped>\n  .list-item {\n    padding: 10px;\n    border-bottom: 1px solid #ebebeb;\n  }\n  \n  .list-item:last-child {\n    border-bottom: none;\n  }\n  </style>\n  "],"mappings":";AAYA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAO;AAC5B,SAASC,SAAQ,QAAS,cAAa;AACvC,MAAMC,KAAI,GAAKC,QAAQ,IAAK;EAC1BF,SAAS,CAACG,KAAK,CAACD,QAAQ;AAC1B;AACE,eAAe;EACfE,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAC,CAAC,SAAS,CAAC;EACjBC,OAAO,EAAE;IAEPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,OAAM,GAAI,IAAI;MAEnB,MAAMI,UAAS,GAAI;QACjBC,IAAI,EAAE,IAAI,CAACR,UAAU;QACrBS,KAAK,EAAE;MACT,CAAC;MACDjB,KAAK,CAACkB,IAAI,CAAC,QAAQ,EAAEH,UAAU,EAC5BI,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,QAAQ,CAACb,IAAI,CAAC;QACpC,IAAI,CAACE,UAAS,GAAIW,QAAQ,CAACb,IAAI,CAACgB,IAAI;QACpC,IAAI,CAACb,WAAU,GAAI,IAAI;QACvB;QACA,IAAI,CAACC,OAAM,GAAI,KAAK;QACpB,IAAI,CAACH,UAAS,GAAI,EAAC;QACnBa,OAAO,CAACC,GAAG,CAAC,gBAAgB;QAC5BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU;QAC3BY,OAAO,CAACC,GAAG,CAAC,gBAAgB;QAC5B;QACA;;QAEA,MAAME,OAAM,GAAI,IAAI,CAACf,UAAU,CAACgB,GAAG,CAACC,IAAG,IAAK;UAC1C,OAAO;YACLC,EAAE,EAAE1B,MAAM,CAAC,CAAC;YACZ2B,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;YACvBK,IAAI,EAAE;UACR,CAAC;QACH,CAAC,CAAC;;QAEF;QACA,MAAMC,cAAa,GAAIR,OAAO,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UAChD,MAAMC,KAAI,GAAID,GAAG,CAACP,KAAK,CAACQ,KAAK;UAC7B,IAAI,CAACF,GAAG,CAACE,KAAK,CAAC,EAAE;YACbF,GAAG,CAACE,KAAK,IAAI,EAAE;UACnB;UACAF,GAAG,CAACE,KAAK,CAAC,CAACC,IAAI,CAAC;YACZC,OAAO,EAAEH,GAAG,CAACP,KAAK,CAACU,OAAO;YAC1BC,UAAU,EAAEJ,GAAG,CAACP,KAAK,CAACW;UAC1B,CAAC,CAAC;UACF,OAAOL,GAAG;QACd,CAAC,EAAE,CAAC,CAAC,CAAC;QACNb,OAAO,CAACC,GAAG,CAACU,cAAc,CAAC;QAC3B,IAAI,CAACvB,UAAS,GAAI,EAAC;QACnB,IAAIe,OAAO,CAAC,CAAC,CAAC,CAACI,KAAI,KAAM,MAAM,EAAE;UAC/B,IAAI,CAACY,OAAO,CAACR,cAAc,CAAC;QAC9B,OAAO;UACL7B,KAAK,CAAC,UAAU;QAClB;MACF,CAAC,EACAsC,KAAK,CAACpC,KAAI,IAAK;QACd,MAAMqC,YAAW,GAAIrC,KAAK,CAACsC,OAAO;QAClCxC,KAAK,CAACuC,YAAY;QAClBrB,OAAO,CAAChB,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,IAAI,CAACM,OAAM,GAAI,KAAK;QACpB;MACF,CAAC,CAAC;IACN;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}