{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  __name: 'HelloVideo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const transcripts = ref([]);\n    const loading = ref(false);\n    let recognition;\n    onMounted(() => {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition) {\n        recognition = new SpeechRecognition();\n        recognition.continuous = true; // 连续识别\n        recognition.lang = 'zh-CN'; // 设置语言为简体中文\n\n        recognition.onresult = event => {\n          for (let i = event.resultIndex; i < event.results.length; i++) {\n            transcripts.value.push({\n              text: event.results[i][0].transcript,\n              timestamp: new Date().toLocaleTimeString()\n            });\n          }\n        };\n        recognition.onerror = event => {\n          console.error('语音识别错误:', event.error);\n          loading.value = false;\n        };\n      } else {\n        console.error('浏览器不支持 SpeechRecognition');\n      }\n    });\n    onUnmounted(() => {\n      if (recognition) {\n        recognition.stop();\n      }\n    });\n    function startRecognition() {\n      if (recognition && !loading.value) {\n        recognition.start();\n        loading.value = true;\n        recognition.onend = () => {\n          loading.value = false;\n        };\n      }\n    }\n    const __returned__ = {\n      transcripts,\n      loading,\n      get recognition() {\n        return recognition;\n      },\n      set recognition(v) {\n        recognition = v;\n      },\n      startRecognition,\n      ref,\n      onMounted,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","transcripts","loading","recognition","SpeechRecognition","window","webkitSpeechRecognition","continuous","lang","onresult","event","i","resultIndex","results","length","value","push","text","transcript","timestamp","Date","toLocaleTimeString","onerror","console","error","stop","startRecognition","start","onend"],"sources":["/home/workspace/AI-Todo/Frontend/src/components/HelloVideo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button type=\"success\" round @click=\"startRecognition\" :loading=\"loading\">\r\n      开始语音识别\r\n    </el-button>\r\n    <el-table :data=\"transcripts\" style=\"width: 100%\">\r\n      <el-table-column\r\n        prop=\"text\"\r\n        label=\"识别内容\"\r\n        width=\"100%\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"timestamp\"\r\n        label=\"时间戳\"\r\n        width=\"200\">\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\nconst transcripts = ref([]);\r\nconst loading = ref(false);\r\nlet recognition;\r\n\r\nonMounted(() => {\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (SpeechRecognition) {\r\n    recognition = new SpeechRecognition();\r\n    recognition.continuous = true;  // 连续识别\r\n    recognition.lang = 'zh-CN';     // 设置语言为简体中文\r\n\r\n    recognition.onresult = (event) => {\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        transcripts.value.push({\r\n          text: event.results[i][0].transcript,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('语音识别错误:', event.error);\r\n      loading.value = false;\r\n    };\r\n  } else {\r\n    console.error('浏览器不支持 SpeechRecognition');\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  if (recognition) {\r\n    recognition.stop();\r\n  }\r\n});\r\n\r\nfunction startRecognition() {\r\n  if (recognition && !loading.value) {\r\n    recognition.start();\r\n    loading.value = true;\r\n    recognition.onend = () => {\r\n      loading.value = false;\r\n    };\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAqBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;;;;;;;IAEjD,MAAMC,WAAW,GAAGH,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAC1B,IAAIK,WAAW;IAEfJ,SAAS,CAAC,MAAM;MACd,MAAMK,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;MACpF,IAAIF,iBAAiB,EAAE;QACrBD,WAAW,GAAG,IAAIC,iBAAiB,CAAC,CAAC;QACrCD,WAAW,CAACI,UAAU,GAAG,IAAI,CAAC,CAAE;QAChCJ,WAAW,CAACK,IAAI,GAAG,OAAO,CAAC,CAAK;;QAEhCL,WAAW,CAACM,QAAQ,GAAIC,KAAK,IAAK;UAChC,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,WAAW,EAAED,CAAC,GAAGD,KAAK,CAACG,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;YAC7DV,WAAW,CAACc,KAAK,CAACC,IAAI,CAAC;cACrBC,IAAI,EAAEP,KAAK,CAACG,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACO,UAAU;cACpCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;YAC3C,CAAC,CAAC;UACJ;QACF,CAAC;QAEDlB,WAAW,CAACmB,OAAO,GAAIZ,KAAK,IAAK;UAC/Ba,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEd,KAAK,CAACc,KAAK,CAAC;UACrCtB,OAAO,CAACa,KAAK,GAAG,KAAK;QACvB,CAAC;MACH,CAAC,MAAM;QACLQ,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC;IAEFxB,WAAW,CAAC,MAAM;MAChB,IAAIG,WAAW,EAAE;QACfA,WAAW,CAACsB,IAAI,CAAC,CAAC;MACpB;IACF,CAAC,CAAC;IAEF,SAASC,gBAAgBA,CAAA,EAAG;MAC1B,IAAIvB,WAAW,IAAI,CAACD,OAAO,CAACa,KAAK,EAAE;QACjCZ,WAAW,CAACwB,KAAK,CAAC,CAAC;QACnBzB,OAAO,CAACa,KAAK,GAAG,IAAI;QACpBZ,WAAW,CAACyB,KAAK,GAAG,MAAM;UACxB1B,OAAO,CAACa,KAAK,GAAG,KAAK;QACvB,CAAC;MACH;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}