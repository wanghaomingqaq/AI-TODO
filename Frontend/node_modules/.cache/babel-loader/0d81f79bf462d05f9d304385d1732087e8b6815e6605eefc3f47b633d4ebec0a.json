{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'NoteForm',\n  data() {\n    return {\n      localInput: '',\n      // 用于文本框的本地数据\n      receivedData: [],\n      showMessage: false,\n      loading: false\n    };\n  },\n  props: ['addNote'],\n  methods: {\n    submitHupu() {\n      this.loading = true;\n      const dataToSend = {\n        text: this.localInput,\n        msgid: 8\n      };\n      axios.post('/login', dataToSend).then(response => {\n        // 假设服务器返回的数据结构是一个包含多个字符串的数组\n        this.receivedData = response.data.map(item => {\n          // 正则表达式匹配单引号内的内容\n          const matches = item.match(/'([^']+)'/);\n          return matches ? matches[1] : null;\n        });\n        this.loading = false;\n      }).catch(error => {\n        console.error('请求错误:', error);\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","localInput","receivedData","showMessage","loading","props","methods","submitHupu","dataToSend","text","msgid","post","then","response","map","item","matches","match","catch","error","console"],"sources":["/home/workspace/AI-Todo/Frontend/src/components/HupuForm.vue"],"sourcesContent":["<template>\n    <div>\n      <el-button type=\"success\" round @click=\"submitHupu\" style=\"margin-top: 5px;\">\n        今天资讯\n        </el-button>\n      <ul>\n      <li v-for=\"(item, index) in this.receivedData\" :key=\"index\">\n            {{ item }}\n      </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\nimport axios from 'axios';\n\nexport default {\n  name: 'NoteForm',\n  data() {\n    return {\n      localInput: '', // 用于文本框的本地数据\n      receivedData: [],\n      showMessage: false,\n      loading: false\n    };\n  },\n  props: ['addNote'],\n  methods: {\n    submitHupu() {\n      this.loading = true;\n\n      const dataToSend = {\n        text: this.localInput,\n        msgid: 8\n      };\n\n      axios.post('/login', dataToSend)\n        .then(response => {\n          // 假设服务器返回的数据结构是一个包含多个字符串的数组\n          this.receivedData = response.data.map(item => {\n            // 正则表达式匹配单引号内的内容\n            const matches = item.match(/'([^']+)'/);\n            return matches ? matches[1] : null;\n          });\n          this.loading = false;\n        })\n        .catch(error => {\n          console.error('请求错误:', error);\n          this.loading = false;\n        });\n    },\n  }\n}\n\n</script>\n  \n  <style scoped>\n  .list-item {\n    padding: 10px;\n    border-bottom: 1px solid #ebebeb;\n  }\n  \n  .list-item:last-child {\n    border-bottom: none;\n  }\n  </style>\n  "],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,OAAM,GAAI,IAAI;MAEnB,MAAMI,UAAS,GAAI;QACjBC,IAAI,EAAE,IAAI,CAACR,UAAU;QACrBS,KAAK,EAAE;MACT,CAAC;MAEDZ,KAAK,CAACa,IAAI,CAAC,QAAQ,EAAEH,UAAU,EAC5BI,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,IAAI,CAACX,YAAW,GAAIW,QAAQ,CAACb,IAAI,CAACc,GAAG,CAACC,IAAG,IAAK;UAC5C;UACA,MAAMC,OAAM,GAAID,IAAI,CAACE,KAAK,CAAC,WAAW,CAAC;UACvC,OAAOD,OAAM,GAAIA,OAAO,CAAC,CAAC,IAAI,IAAI;QACpC,CAAC,CAAC;QACF,IAAI,CAACZ,OAAM,GAAI,KAAK;MACtB,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,IAAI,CAACf,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACN;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}