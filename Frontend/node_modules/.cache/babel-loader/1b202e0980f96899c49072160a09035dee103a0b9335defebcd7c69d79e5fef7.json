{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-55ac2d06\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_Loading = _resolveComponent(\"Loading\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_row, {\n    class: \"component-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 1\n    }), _createVNode(_component_el_col, {\n      span: 22\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_input, {\n        type: \"textarea\",\n        autosize: {\n          minRows: 3,\n          maxRows: 6\n        },\n        modelValue: $data.localInput,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.localInput = $event),\n        placeholder: \"添加你的笔记！格式： #标签 内容...\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 21\n        }, {\n          default: _withCtx(() => [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(\" 加载中... \"), _createVNode(_component_el_icon, {\n            class: \"is-loading\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_Loading)]),\n            _: 1 /* STABLE */\n          })])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 3\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"success\",\n            round: \"\",\n            onClick: $options.submitText,\n            style: {\n              \"margin-top\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" send \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 1\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    style: {\n      \"background-color\": \"#f1f2f5\",\n      \"height\": \"15px\",\n      \"margin-left\": \"-20px\",\n      \"margin-right\": \"-20px\"\n    }\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_createVNode","_component_el_row","class","default","_withCtx","_component_el_col","span","_createElementVNode","_component_el_input","type","autosize","minRows","maxRows","modelValue","$data","localInput","_cache","$event","placeholder","loading","_hoisted_1","_createTextVNode","_component_el_icon","_component_Loading","_","_createCommentVNode","_component_el_button","round","onClick","$options","submitText","style"],"sources":["/home/workspace/vueProject/my-vue-project/src/components/NoteForm.vue"],"sourcesContent":["<template>\n  <el-row class=\"component-container\">\n    <el-col :span=\"1\">\n    </el-col>\n    <el-col :span=\"22\">\n      <div>\n        <el-input type=\"textarea\" :autosize=\"{ minRows: 3, maxRows: 6 }\" v-model=\"localInput\" placeholder=\"添加你的笔记！格式： #标签 内容...\">\n        </el-input>\n      </div>\n      <el-row>\n        <el-col :span=\"21\">\n          <div v-if=\"loading\">\n            加载中...\n            <el-icon class=\"is-loading\"><Loading /></el-icon>\n          </div>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-button type=\"success\" round @click=\"submitText\" style=\"margin-top: 5px;\">\n            send\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"1\"></el-col>\n  </el-row>\n  <el-row style=\"background-color: #f1f2f5; height: 15px; margin-left: -20px;  margin-right: -20px;\"></el-row>  \n</template>\n\n\n<script>\nimport axios from 'axios';\nimport {nanoid} from 'nanoid'\nimport { ElMessage } from 'element-plus'\nconst open4 = (errormsg) => {\n  ElMessage.error(errormsg)\n}\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      localInput: '', // 用于文本框的本地数据\n      recivedata: [],\n      showMessage: false,\n      loading: false\n    };\n  },\n  props:['addTodo'],\n  methods: {\n\n    submitText() {\n      this.loading = true;\n\n      const dataTosend = {\n        text: this.localInput,\n        msgid: 5\n      };\n      axios.post('/login', dataTosend)\n        .then(response => {\n          console.log('服务器响应:', response.data);\n          this.recivedata = response.data.todos;\n    \n\n          this.showMessage = true;\n          // 处理服务器的响应\n          this.loading = false;\n          this.localInput = ''\n          // this.$emit('inputSubmitted', this.recivedata); // 向父组件发送事件\n          // const todoObj = {id:nanoid(),title:this.recivedata,done:false}\n          const todoObj = this.recivedata.map(item => {\n            return {\n              id: nanoid(),\n              title: item,\n              done: false\n            };\n          });\n          this.recivedata = ''\n          console.log(todoObj)\n          if (todoObj[0].title !== 'null') {\n            this.addTodo(todoObj);\n          } else {\n            open4(\"未提取到关键词！\")\n          }\n        })\n        .catch(error => {\n          const errorMessage = error.message; \n          open4(errorMessage)\n          console.error('请求错误:', error);\n          this.loading = false;\n          // 处理错误ee\n        });\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n::v-deep .el-textarea__inner{\n    border-radius: 10px;      /* 圆角 */\n    background-color: #f0f1f4; /* 背景颜色，可根据需要更改颜色值 */\n}\n.is-loading {\n  animation: rotate 2s linear infinite;\n}\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n</style>\n"],"mappings":";;;EAAAA,GAAA;AAAA;;;;;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAuBSC,iBAAA;IAvBDC,KAAK,EAAC;EAAqB;IADrCC,OAAA,EAAAC,QAAA,CAEI,MACS,CADTJ,YAAA,CACSK,iBAAA;MADAC,IAAI,EAAE;IAAC,IAEhBN,YAAA,CAkBSK,iBAAA;MAlBAC,IAAI,EAAE;IAAE;MAJrBH,OAAA,EAAAC,QAAA,CAKM,MAGM,CAHNG,mBAAA,CAGM,cAFJP,YAAA,CACWQ,mBAAA;QADDC,IAAI,EAAC,UAAU;QAAEC,QAAQ,EAAE;UAAAC,OAAA;UAAAC,OAAA;QAAA,CAA0B;QANvEC,UAAA,EAMkFC,KAAA,CAAAC,UAAU;QAN5F,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMkFH,KAAA,CAAAC,UAAU,GAAAE,MAAA;QAAEC,WAAW,EAAC;iDAGpGlB,YAAA,CAYSC,iBAAA;QArBfE,OAAA,EAAAC,QAAA,CAUQ,MAKS,CALTJ,YAAA,CAKSK,iBAAA;UALAC,IAAI,EAAE;QAAE;UAVzBH,OAAA,EAAAC,QAAA,CAWU,MAGM,CAHKU,KAAA,CAAAK,OAAO,I,cAAlBrB,mBAAA,CAGM,OAdhBsB,UAAA,GAAAC,gBAAA,CAW8B,UAElB,GAAArB,YAAA,CAAiDsB,kBAAA;YAAxCpB,KAAK,EAAC;UAAY;YAbvCC,OAAA,EAAAC,QAAA,CAawC,MAAW,CAAXJ,YAAA,CAAWuB,kBAAA,E;YAbnDC,CAAA;kBAAAC,mBAAA,e;UAAAD,CAAA;YAgBQxB,YAAA,CAISK,iBAAA;UAJAC,IAAI,EAAE;QAAC;UAhBxBH,OAAA,EAAAC,QAAA,CAiBU,MAEY,CAFZJ,YAAA,CAEY0B,oBAAA;YAFDjB,IAAI,EAAC,SAAS;YAACkB,KAAK,EAAL,EAAK;YAAEC,OAAK,EAAEC,QAAA,CAAAC,UAAU;YAAEC,KAAwB,EAAxB;cAAA;YAAA;;YAjB9D5B,OAAA,EAAAC,QAAA,CAiBuF,MAE7E,CAnBViB,gBAAA,CAiBuF,QAE7E,E;YAnBVG,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAuBIxB,YAAA,CAA2BK,iBAAA;MAAlBC,IAAI,EAAE;IAAC,G;IAvBpBkB,CAAA;MAyBExB,YAAA,CAA4GC,iBAAA;IAApG8B,KAA0F,EAA1F;MAAA;MAAA;MAAA;MAAA;IAAA;EAA0F,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}