{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      loginId: '',\n      loginPassword: '',\n      registerUsername: '',\n      registerPassword: ''\n    };\n  },\n  methods: {\n    async loginUser() {\n      try {\n        const loginId = parseInt(this.loginId, 10);\n        const response = await axios.post('/login', {\n          id: loginId,\n          password: this.loginPassword,\n          msgid: 1\n        });\n        console.log(response.data);\n        if (response.data.errno == 0) {\n          this.$emit('login-success', response.data);\n        } else {\n          console.error('Login failed:', response.data.errmsg);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async registerUser() {\n      try {\n        const response = await axios.post('/login', {\n          msgid: 3,\n          name: this.registerUsername,\n          password: this.registerPassword\n        });\n        if (response.data.errno == 0) {\n          this.$emit('register-success', response.data);\n        } else {\n          console.error('Login failed:', response.data.errmsg);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginId","loginPassword","registerUsername","registerPassword","methods","loginUser","parseInt","response","post","id","password","msgid","console","log","errno","$emit","error","errmsg","registerUser"],"sources":["/home/workspace/vueProject/my-vue-project/src/components/LoginForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"loginUser\">\r\n      <label for=\"loginUsername\">Username:</label>\r\n      <input type=\"text\" id=\"loginUsername\" v-model=\"loginId\" required>\r\n      <label for=\"loginPassword\">Password:</label>\r\n      <input type=\"password\" id=\"loginPassword\" v-model=\"loginPassword\" required>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n\r\n    <h2>Register</h2>\r\n    <form @submit.prevent=\"registerUser\">\r\n      <label for=\"registerUsername\">Username:</label>\r\n      <input type=\"text\" id=\"registerUsername\" v-model=\"registerUsername\" required>\r\n      <label for=\"registerPassword\">Password:</label>\r\n      <input type=\"password\" id=\"registerPassword\" v-model=\"registerPassword\" required>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'LoginForm',\r\n  data() {\r\n    return {\r\n      loginId: '',\r\n      loginPassword: '',\r\n      registerUsername: '',\r\n      registerPassword: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async loginUser() {\r\n      try {\r\n        const loginId = parseInt(this.loginId, 10);\r\n        const response = await axios.post('/login', {\r\n          id: loginId,\r\n          password: this.loginPassword,\r\n          msgid: 1\r\n        });\r\n        console.log(response.data);\r\n        if (response.data.errno == 0)\r\n        {\r\n          this.$emit('login-success', response.data);\r\n        }\r\n        else\r\n        {\r\n          console.error('Login failed:', response.data.errmsg);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async registerUser() {\r\n      try {\r\n        const response = await axios.post('/login', {\r\n          msgid:3,\r\n          name: this.registerUsername,\r\n          password: this.registerPassword,\r\n        });\r\n        if (response.data.errno == 0)\r\n        {\r\n          this.$emit('register-success', response.data);\r\n        }\r\n        else\r\n        {\r\n          console.error('Login failed:', response.data.errmsg);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,aAAa,EAAE,EAAE;MACjBC,gBAAgB,EAAE,EAAE;MACpBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAML,OAAM,GAAIM,QAAQ,CAAC,IAAI,CAACN,OAAO,EAAE,EAAE,CAAC;QAC1C,MAAMO,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,QAAQ,EAAE;UAC1CC,EAAE,EAAET,OAAO;UACXU,QAAQ,EAAE,IAAI,CAACT,aAAa;UAC5BU,KAAK,EAAE;QACT,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAIQ,QAAQ,CAACR,IAAI,CAACe,KAAI,IAAK,CAAC,EAC5B;UACE,IAAI,CAACC,KAAK,CAAC,eAAe,EAAER,QAAQ,CAACR,IAAI,CAAC;QAC5C,OAEA;UACEa,OAAO,CAACI,KAAK,CAAC,eAAe,EAAET,QAAQ,CAACR,IAAI,CAACkB,MAAM,CAAC;QACtD;MACF,EAAE,OAAOD,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMX,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,QAAQ,EAAE;UAC1CG,KAAK,EAAC,CAAC;UACPb,IAAI,EAAE,IAAI,CAACI,gBAAgB;UAC3BQ,QAAQ,EAAE,IAAI,CAACP;QACjB,CAAC,CAAC;QACF,IAAII,QAAQ,CAACR,IAAI,CAACe,KAAI,IAAK,CAAC,EAC5B;UACE,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAER,QAAQ,CAACR,IAAI,CAAC;QAC/C,OAEA;UACEa,OAAO,CAACI,KAAK,CAAC,eAAe,EAAET,QAAQ,CAACR,IAAI,CAACkB,MAAM,CAAC;QACtD;MACF,EAAE,OAAOD,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}